@model IEnumerable<TerritoryWeb.Models.Territory>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ol class="breadcrumb">
    <li>@Html.ActionLink(Resources.Menu.Breadcrum.Home, "Index", "Home")</li>
    <li class="active">@Resources.Menu.Breadcrum.Territories</li>
</ol>
<h2>@Resources.Views.Territory.Index.TerritoryPageTitle</h2>
<p>
    <div class="row">
        <div class="col-xs-6">
            <a href="@Url.Action("Create")" class="btn btn-default"><i class="fa fa-plus-square" aria-hidden="true"></i> @Resources.Views.Territory.Index.NewTerritoryButton</a>
        </div>
        <div class="col-xs-6 text-right">
            <a href="@Url.Action("ViewTerritories")" class="btn btn-default"><i class="fa fa-map-marker" aria-hidden="true"></i> @Resources.Views.Territory.Index.ViewTerritoriesButton</a>
        </div>
    </div>
</p>
<table class="table table-striped table-hover table-condensed">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().TerritoryName).ToHtmlString(), "Index", new { sortOrder = ViewBag.TerritoryNameSortParam }, new { @style = "color: black" })
        </th>
        <th>
            @Html.ActionLink(Resources.Views.Territory.Index.DoorCount, "Index", new { sortOrder = ViewBag.DoorsSortParm }, new { @style = "color: black" })
        </th>
        <th class="hidden-xs">
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().City).ToHtmlString(), "Index", new { sortOrder = ViewBag.CitySortParm }, new { @style = "color: black" })
        </th>
        <th class="hidden-xs">
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Type).ToHtmlString(), "Index", new { sortOrder = ViewBag.TypeSortParm }, new { @style = "color: black" })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().AssignedPublisherID).ToHtmlString(), "Index", new { sortOrder = ViewBag.AssignedPublisherIDSortParm }, new { @style = "color: black" })
        </th>
        <th class="hidden-xs">
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().CheckedOut).ToHtmlString(), "Index", new { sortOrder = ViewBag.CheckedOutSortParm }, new { @style = "color: black" })
        </th>
        <th class="hidden-xs">
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().CheckedIn).ToHtmlString(), "Index", new { sortOrder = ViewBag.CheckedInSortParm }, new { @style = "color: black" })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.TerritoryName, "Details", new { id = item.Id }, new { title = Resources.Views.Territory.Index.TerritoryLinkTitle })
            </td>
            <td>
                @Html.ActionLink(Resources.Views.Territory.Index.DoorCount + ": " + item.Doors.Count.ToString(), "Index", "Doors", new { TerritoryID = item.Id }, new { title = Resources.Views.Territory.Index.DoorLinkTitle })
            </td>
            <td class="hidden-xs">
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td class="hidden-xs">
                @Html.DisplayFor(modelItem => item.TerritoryType.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AssignedUser.FullName)
            </td>
            <td class="hidden-xs">
                @Html.DisplayFor(modelItem => item.CheckedOut)
            </td>
            <td class="hidden-xs">
                @Html.DisplayFor(modelItem => item.CheckedIn)
            </td>
            <td class="text-right">
                <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-xs btn-default terrdeletebtn"
                   data-terrname="@item.TerritoryName" data-id="@item.Id">
                    <span class="glyphicon glyphicon-trash"></span>
                    @Resources.Common.Delete
                </a>
            </td>
        </tr>
    }

</table>
<script>
    $(function () {
        $(".terrdeletebtn").click(function (event) {
            event.preventDefault();

            $("#deletemodalterrname").text($(this).data("terrname"));
            $("#myDeleteModal").data("id", $(this).data("id"));
            $("#myDeleteModal").modal('show');
        });

        //On Delete
        $("#modaldeletebtn").click(function (event) {
            event.preventDefault();
            //Json call
            var url = "@Url.Action("DeleteConfirmedJson", "Territory")/" + $("#myDeleteModal").data("id");
            var jqxhr = $.getJSON(url, function () {
                $("#myDeleteModal").modal('hide');
                location.reload();
            }).error(function(jqXHR, textStatus, errorThrown){ /* assign handler */
                alert(jqXHR.responseText);
            });
        });
    });

</script>
<!-- Modal -->
<div class="modal fade" id="myDeleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">@Resources.Views.Territory.Index.ModalDeleteTitle</h4>
            </div>
            <div class="modal-body">
                @Resources.Views.Territory.Index.ModalBodyMsg1 <span id="deletemodalterrname"></span>?<br /><br />
                @Resources.Views.Territory.Index.ModalBodyMsg2
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="modaldeletebtn">@Resources.Common.Delete</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Common.Close</button>
            </div>
        </div>
    </div>
</div>
