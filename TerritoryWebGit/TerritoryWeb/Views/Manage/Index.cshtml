@model TerritoryWeb.Models.IndexViewModel
@{
    ViewBag.Title = Resources.Views.Manage.Index.Title;
}
<ol class="breadcrumb">
    <li>@Html.ActionLink(Resources.Menu.Breadcrum.Home, "Index", "Home")</li>
    <li class="active">@Resources.Menu.Breadcrum.UserSettings</li>
</ol>
<h2>@Resources.Views.Manage.Index.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>@Resources.Views.Manage.Index.TitleDescription</h4>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => Model.UserID)
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            @ViewBag.ErrorMessage
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group" id="EmailGrp">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" id="PhoneNumberGrp">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group collapse">
                            @Html.LabelFor(model => model.CellPhone, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <input type="submit" value="@Resources.Common.Save" class="btn btn-default" id="submitbtn" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="alert alert-danger collapse" role="alert" id="warningmsg"><b>@Resources.Views.Manage.Index.ValidationError:</b> @Resources.Views.Manage.Index.ValidationErrorMsg</div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <dl class="dl-horizontal">
                    <dt>Roles:</dt>
                    <dd>
                        @Model.UserRoles
                    </dd>
                    <dt>Password:</dt>
                    <dd>
                        [
                        @if (Model.HasPassword)
                        {
                            @Html.ActionLink(Resources.Views.Manage.Index.ChangePassword, "ChangePassword")
                        }
                        else
                        {
                            @Html.ActionLink(Resources.Views.Manage.Index.CreatePassword, "SetPassword")
                        }
                        ]
                    </dd>
                </dl>
            </div>
        </div>
    }
</div>
<script>
    $("#submitbtn").click(function (event) {
        if ($("#Email").val() == "" && $("#PhoneNumber").val() == "") {
            event.preventDefault();
            $("#warningmsg").show();
            $("#EmailGrp").addClass("has-error");
            $("#PhoneNumberGrp").addClass("has-error");
        } else {
            $("#warningmsg").hide();
            $("#EmailGrp").removeClass("has-error");
            $("#PhoneNumberGrp").removeClass("has-error");
        }

    });

    $("#Email, #PhoneNumber").on("input", function () {
        $("#warningmsg").hide();
        $("#EmailGrp").removeClass("has-error");
        $("#PhoneNumberGrp").removeClass("has-error");
    });

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}